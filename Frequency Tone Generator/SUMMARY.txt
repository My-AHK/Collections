
*  Tone generator GUI - play beeps at set frequency.

Purpose:
   Provides a simple interface to generate tones using system-level 
   `SoundBeep`, allowing user control over both frequency and duration. 
   Useful for quick tone testing, alerts, or sound-based debugging.
   • Accessed via Ctrl+T hotkey.
   • Inputs include tone frequency (Hz) and duration (ms).
   • Includes validation to prevent invalid or unsupported tones.

Key Features:
   This script uses a compact GUI to let users trigger beeps on demand, 
   constrained within valid `SoundBeep` parameters.
   • Two editable input fields:
       ⮞ Frequency input defaults to 1700 Hz.
       ⮞ Duration input defaults to 3000 ms.
   • Input validation:
       ⮞ Frequency must be between 37 and 32767 Hz.
           ⮚ If out of range, an error dialog is shown.
       ⮞ Duration must be at least 1 ms.
           ⮚ Rejects 0 or negative values.
   • Buttons provided:
       ⮞ “Play” runs the beep using `SoundBeep`.
       ⮞ “Exit” closes the GUI and ends the script.
   • GUI always stays on top, frameless with border:
       ⮞ `+AlwaysOnTop`, `-Caption`, `+Border` styles.
   • Uses Arial font with styled weight and transparency.
       ⮞ Consistent color scheme: dark blue background, light cyan text.

Logic Summary:
   Once the GUI is displayed, users interact with it directly to trigger 
   system tones. Data is retrieved from GUI elements when Play is pressed, 
   and validation is performed before executing the beep.
   • Hotkey (Ctrl+T) creates and shows the GUI.
       ⮞ GUI is positioned at x1550 y450.
       ⮞ Width is 240px, height is 100px.
   • Button “Play” triggers `PlayToneSection:` label.
       ⮞ GUI values submitted with `Gui, Submit, NoHide`.
       ⮞ Frequency and duration are read from `FreqEdit` and `DurEdit`.
           ⮚ If frequency invalid:
               - Shows message box, prevents beep.
           ⮚ If duration invalid:
               - Shows message box, prevents beep.
           ⮚ If valid:
               - Calls `SoundBeep` with given values.
   • Button “Exit” or closing the GUI calls `ExitScript:` label.
       ⮞ Immediately exits the application.

Layout:
   The layout is compact and functionally grouped for ease of use, 
   prioritizing clarity and quick access.
   • GUI elements organized in two vertical blocks:
       ⮞ First block: Frequency controls.
       ⮞ Second block: Duration controls.
   • Inline spacing keeps all inputs and buttons visible without scrolling.
   • Coordinates manually set for pixel-perfect placement.
   • Font styling differentiates headings from input fields.

User Experience:
   The interface is designed for efficiency and clarity, offering 
   minimal distraction while giving real-time feedback through audio.
   • Fast interaction — beep occurs instantly when valid inputs are used.
   • Prevents invalid tone ranges through proactive warnings.
   • Clear labeling and unit suffixes (Hz, ms) reduce confusion.
   • Always-on-top behavior ensures visibility during use.
   • Frameless look provides a modern, unobtrusive UI aesthetic.










